/* Generated by wayland-scanner 1.21.0 */

#ifndef QNX_WESTON_DESKTOP_EXTENSION_SERVER_PROTOCOL_H
#define QNX_WESTON_DESKTOP_EXTENSION_SERVER_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-server.h"

#ifdef  __cplusplus
extern "C" {
#endif

struct wl_client;
struct wl_resource;

/**
 * @page page_qnx_weston_desktop_extension The qnx_weston_desktop_extension protocol
 * @section page_ifaces_qnx_weston_desktop_extension Interfaces
 * - @subpage page_iface_qnx_weston_desktop_shell_extension - Extensions to the weston desktop shell for QNX
 */
struct qnx_weston_desktop_shell_extension;
struct wl_output;
struct wl_surface;

#ifndef QNX_WESTON_DESKTOP_SHELL_EXTENSION_INTERFACE
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_INTERFACE
/**
 * @page page_iface_qnx_weston_desktop_shell_extension qnx_weston_desktop_shell_extension
 * @section page_iface_qnx_weston_desktop_shell_extension_desc Description
 *
 * @section page_iface_qnx_weston_desktop_shell_extension_api API
 * See @ref iface_qnx_weston_desktop_shell_extension.
 */
/**
 * @defgroup iface_qnx_weston_desktop_shell_extension The qnx_weston_desktop_shell_extension interface
 *
 */
extern const struct wl_interface qnx_weston_desktop_shell_extension_interface;
#endif

#ifndef QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_ACTION_ENUM
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_ACTION_ENUM
enum qnx_weston_desktop_shell_extension_surface_state_action {
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_ACTION_ACTIVATED = 0,
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_ACTION_DESTROYED = 1,
};
#endif /* QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_ACTION_ENUM */

#ifndef QNX_WESTON_DESKTOP_SHELL_EXTENSION_TASKBAR_POSITION_ENUM
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_TASKBAR_POSITION_ENUM
enum qnx_weston_desktop_shell_extension_taskbar_position {
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_TASKBAR_POSITION_TOP = 0,
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_TASKBAR_POSITION_BOTTOM = 1,
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_TASKBAR_POSITION_LEFT = 2,
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_TASKBAR_POSITION_RIGHT = 3,
};
#endif /* QNX_WESTON_DESKTOP_SHELL_EXTENSION_TASKBAR_POSITION_ENUM */

#ifndef QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_PRESENT_STATE_ENUM
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_PRESENT_STATE_ENUM
enum qnx_weston_desktop_shell_extension_surface_present_state {
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_PRESENT_STATE_TOGGLE = 0,
	QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_PRESENT_STATE_DESTROY = 1,
};
#endif /* QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_PRESENT_STATE_ENUM */

/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 * @struct qnx_weston_desktop_shell_extension_interface
 */
struct qnx_weston_desktop_shell_extension_interface {
	/**
	 */
	void (*set_taskbar)(struct wl_client *client,
			    struct wl_resource *resource,
			    struct wl_resource *output,
			    struct wl_resource *surface);
	/**
	 * set taskbar position
	 *
	 * Tell the shell which side of the screen the taskbar is
	 * located. This is so that new windows do not overlap the taskbar
	 * and maximized windows maximize properly.
	 */
	void (*set_taskbar_position)(struct wl_client *client,
				     struct wl_resource *resource,
				     uint32_t position);
	/**
	 * set surface present state
	 *
	 * Pass inputs from desktop shell to compositor
	 */
	void (*set_surface_present_state)(struct wl_client *client,
					  struct wl_resource *resource,
					  uint32_t surface_id,
					  uint32_t state);
};

#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_CONFIGURE 0
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_MAPPED 1
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_CHANGED 2

/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 */
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_CONFIGURE_SINCE_VERSION 1
/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 */
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_MAPPED_SINCE_VERSION 1
/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 */
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_CHANGED_SINCE_VERSION 1

/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 */
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SET_TASKBAR_SINCE_VERSION 1
/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 */
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SET_TASKBAR_POSITION_SINCE_VERSION 1
/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 */
#define QNX_WESTON_DESKTOP_SHELL_EXTENSION_SET_SURFACE_PRESENT_STATE_SINCE_VERSION 1

/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 * Sends an configure event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
qnx_weston_desktop_shell_extension_send_configure(struct wl_resource *resource_, uint32_t edges, int32_t width, int32_t height)
{
	wl_resource_post_event(resource_, QNX_WESTON_DESKTOP_SHELL_EXTENSION_CONFIGURE, edges, width, height);
}

/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 * Sends an surface_mapped event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
qnx_weston_desktop_shell_extension_send_surface_mapped(struct wl_resource *resource_, uint32_t surface_id, const char *name)
{
	wl_resource_post_event(resource_, QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_MAPPED, surface_id, name);
}

/**
 * @ingroup iface_qnx_weston_desktop_shell_extension
 * Sends an surface_state_changed event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
qnx_weston_desktop_shell_extension_send_surface_state_changed(struct wl_resource *resource_, uint32_t surface_id, uint32_t surface_state)
{
	wl_resource_post_event(resource_, QNX_WESTON_DESKTOP_SHELL_EXTENSION_SURFACE_STATE_CHANGED, surface_id, surface_state);
}

#ifdef  __cplusplus
}
#endif

#endif
